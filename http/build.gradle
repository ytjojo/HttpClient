apply plugin: 'com.android.library'
apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode  rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'


    api "io.reactivex.rxjava3:rxjava:3.0.9"
    api "io.reactivex.rxjava3:rxandroid:3.0.0"
    api 'com.trello.rxlifecycle4:rxlifecycle-components:4.0.2'
    api 'com.trello.rxlifecycle4:rxlifecycle-android:4.0.2'
    api 'com.trello.rxlifecycle4:rxlifecycle-android-lifecycle:4.0.2'

    api rootProject.ext.rxAndroid
    api rootProject.ext.rxJava
    api rootProject.ext.supportAnnotations
    api rootProject.ext.lifecycle
    api rootProject.ext.appCompat

    api rootProject.ext.gson
    api rootProject.ext.okhttp
    api rootProject.ext.adapter_rxjava3
    api rootProject.ext.retrofit


}