apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'     // Lambda表达式
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.fernandocejas.frodo'
def isTravis = "true".equals(System.getenv("TRAVIS"))
def packageTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    signingConfigs {
//        debug {
//
//        }
        release {
            //storeFile file("../yourapp.keystore")
            //storePassword "your password"
            //keyAlias "your alias"
            //keyPassword "your password"

            //setting your signing.properties
            //first, add signing.properties to ./app/
            //second, add property STORE_FILE, STORE_PASSWORD, KEY_ALIAS, KEY_PASSWORD
        }
    }
    defaultConfig {
//            vectorDrawables.useSupportLibrary = true
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode  rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        multiDexEnabled true
        if (isDebug.toBoolean()) {
            buildConfigField 'boolean', 'isAPP', 'false'
        } else {
            buildConfigField 'boolean', 'isAPP', 'true'
        }
        buildConfigField 'String', 'MIXPANEL_TOKEN', '\"' + applicationId + "\""
//        testInstrumentationRunner "${applicationId}.runner.RxAndroidJUnitRunner"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    productFlavors {
        Store360 {
//            manifestPlaceholders = [CHANNEL_VALUE: "Store360"]
            buildConfigField "String", "AUTO_TYPE", "\"360\""
        }
//        QQ {}
//        WanDouJia {}
//        Xiaomi {}
//        Flyme {}
//        Market91 {}
//        AnZhuo {}
//        BaiDu {}
//        AnZhi {}
//        GFeng {}
//        AppChina {}
//        EoeMarket {}
//        PP {}
    }

//        productFlavors.all { flavor ->
//        flavor.manifestPlaceholders = [CHANNEL_VALUE: name]
//    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/ASL2.0'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            versionNameSuffix " Debug"
            debuggable true
        }
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    //Needed because of this https://github.com/square/okio/issues/58
    lintOptions {
        warning 'InvalidPackage'
        abortOnError false
    }
    testOptions {

        unitTests.returnDefaultValues = true
    }
    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']//重新配置路径
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            if (output.outputFile != null && output.outputFile.name.endsWith('.apk')) {
                def fileName
                fileName = "appName${variant.buildType.name}_v${defaultConfig.versionName}_${packageTime()}_${variant.productFlavors[0].name}.apk"
                output.outputFile = new File( output.outputFile.parent, fileName)
            }
            //每次我们编译的时候，都会自动帮你保存mapping文件到本地的
            if (variant.getBuildType().isMinifyEnabled()) {
                variant.assemble.doLast {
                    copy {
                        from variant.mappingFile
                        into "${projectDir}/mappings"
                        rename { String fileName ->
                            "mapping-${variant.name}.txt"
                        }
                    }
                }
            }
        }
    }

}

project.configurations.all {
//    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'//不使用缓存，使用仓库中最新的包
    resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
}

tasks.whenTaskAdded { task ->
    if (task.name.equals("lint")) {
        task.enabled = false
    }
}
//android.variantFilter { variant ->
//    if(variant.buildType.name.equals('release')
//            && variant.getFlavors().get(0).name.equals('mock')) {
//        variant.setIgnore(true);
//    }
//}

dependencies {

    final DAGGER_VERSION = '2.0.1'
    if(!isDebug.toBoolean()){
        compile project(':component')
    }
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile project(':androidmock')
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.android.support:appcompat-v7:23.4.0'
    releaseCompile project(path: ':domain', configuration: 'release')
    debugCompile project(path: ':domain', configuration: 'debug')
    compile 'com.android.support:design:23.4.0'
    compile 'com.android.support:recyclerview-v7:23.4.0'
    compile 'com.android.support:cardview-v7:23.4.0'
    compile 'com.android.support:support-annotations:23.4.0'
    compile 'org.greenrobot:eventbus:3.0.0'
    //rx
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.2.2'
    compile ('com.trello:rxlifecycle:1.0'){
        exclude group: 'com.android.support'
    }
    compile ('com.trello:rxlifecycle-components:1.0'){
        exclude group: 'com.android.support'
    }
    compile 'com.trello:rxlifecycle-android:1.0'
    //UI
    compile 'com.jakewharton.rxbinding:rxbinding:0.4.0'
    compile 'com.jakewharton.rxrelay:rxrelay:1.1.0'

    compile 'com.f2prateek.rx.preferences:rx-preferences:1.0.1'
    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile 'com.google.code.gson:gson:2.7'
    compile "com.fasterxml.jackson.core:jackson-databind:2.7.0"//自动依赖ackson.core 和ackson-annotations
    compile 'com.squareup.retrofit2:converter-gson:2.2.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.2.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.6.0'
    compile 'com.squareup.okhttp3:okhttp:3.6.0'
    compile 'com.github.katelee.widget:recyclerviewlayout:0.9.5'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'jp.wasabeef:glide-transformations:2.0.0'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    // or 1.4-beta1
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
    // or 1.4-beta1
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
    // or 1.4-beta1
    compile 'cn.finalteam:galleryfinal:1.4.8.7'
    compile 'com.github.medyo:dynamicbox:1.2@aar'
    compile 'cat.ereza:customactivityoncrash:1.4.0'
    compile 'com.f2prateek.rx.preferences:rx-preferences:1.0.1'


    compile 'de.hdodenhof:circleimageview:1.3.0'
    //dagger2
    compile "com.google.dagger:dagger:$DAGGER_VERSION"
    apt "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    provided 'org.glassfish:javax.annotation:10.0-b28' //Required by Dagger2

    compile 'com.github.tianzhijiexian:logger:1.1.7'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    //https://github.com/promeG/XLog
    debugCompile 'com.github.promeg:xlog-compiler:2.1.1' // ~6kB
    debugCompile 'com.github.promeg:xlog-android:2.1.1' // ~150kB
    releaseCompile 'com.github.promeg:xlog-android-idle:2.1.1' // ~5kB
    compile 'com.jakewharton:butterknife:8.1.0'
    apt 'com.jakewharton:butterknife-compiler:8.1.0'
//    androidTestCompile 'com.android.support.test:runner:0.5'
//    androidTestCompile 'com.android.support.test:rules:0.5'

    //design
    compile 'com.dmitrymalkovich.android:material-design-dimens:1.2'
    //download
    compile 'com.liulishuo.filedownloader:library:0.3.2'
    //intent传值
    compile 'com.f2prateek.dart:dart:2.0.0'
    provided 'com.f2prateek.dart:dart-processor:2.0.0'
    compile 'com.f2prateek.dart:henson:2.0.0'
    provided 'com.f2prateek.dart:henson-processor:2.0.0'
    //statusbar
    compile "com.flyco.systembar:FlycoSystemBar_Lib:1.0.0@aar"



    compile 'com.github.chrisbanes:PhotoView:1.2.6'
    compile 'com.facebook.rebound:rebound:0.3.8'
    compile 'com.nineoldandroids:library:2.4.0'

    //编译加速
//    compile ('com.sothree.slidinguppanel:library:3.3.0'){
//        exclude group: 'com.nineoldandroids'
//    exclude module: 'support-v4'
//    exclude (group:'javax.inject', module:'javax.inject')
//        exclude group: 'com.android.support'
////        ['com.nineoldandroids', 'com.android.support', 'net.engio', 'com.google.guava'].each {
////            exclude group: it
////        }
//    }
    //UI
    testCompile 'org.robolectric:robolectric:3.0'
    // Dependencies for local unit tests
    testCompile 'com.squareup.retrofit2:retrofit-mock:2.2.0'
    testCompile "junit:junit:$rootProject.ext.junitVersion"
    testCompile "org.mockito:mockito-all:$rootProject.ext.mockitoVersion"
    testCompile "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"
    testCompile("org.powermock:powermock-module-junit4:1.6.2")
    testCompile "org.powermock:powermock-module-junit4-rule:1.6.2"
    testCompile "org.powermock:powermock-api-mockito:1.6.2"
    testCompile "org.powermock:powermock-classloading-xstream:1.6.2"
    testCompile 'com.squareup.okhttp3:mockwebserver:3.6.0'
    // Espresso UI Testing
    androidTestCompile "com.android.support.test:runner:$rootProject.runnerVersion"
    androidTestCompile "com.android.support.test:rules:$rootProject.rulesVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-contrib:$rootProject.espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion"

    // Resolve conflicts between main and test APK:
    androidTestCompile "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
    androidTestCompile "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    androidTestCompile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"

}
configurations {
    androidTestCompile.exclude group: 'com.android.support', module: 'support-v4'
}
def propFile = project.rootProject.file('signing.properties');
if (propFile.exists()) {
    def Properties props = new Properties()
    props.load(new FileInputStream(propFile))
    if (props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        android.buildTypes.release.signingConfig = null
    }
} else {
    android.buildTypes.release.signingConfig = null
}